{"version":3,"sources":["RandEngine.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;;;;;;;0BAEU,YAAY;;;;AAEnC,IAAM,qBAAqB,GAAG,kBAAkB,CAAC;AACjD,IAAM,cAAc,GAAG,CAAC,CAAC;;;eAGZ,oBAAe;QAAd,OAAO,gCAAG,EAAE;;;;AACtB,QAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,qBAAqB,CAAC;AACtE,QAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,cAAc,CAAC;;AAE3C,iCAAW,IAAI,CAAC,IAAI,EAAE;AACpB,YAAM,EAAE,IAAI;KACb,CAAC,CAAC;GACJ;;;;WAEa,0BAAa;UAAZ,MAAM,gCAAG,CAAC;;AACvB,UAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,cAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;OACzC;;AAED,aAAO,MAAM,CAAC;KACf;;;WAEQ,qBAAoB;UAAnB,GAAG,gCAAG,CAAC;UAAE,GAAG,gCAAI,CAAC;;;AAEzB,UAAI,GAAG,GAAG,GAAG,EAAE;AACb,YAAI,IAAI,GAAG,GAAG,CAAC;AACf,WAAG,GAAG,GAAG,CAAC;AACV,WAAG,GAAG,IAAI,CAAC;OACZ;;AAED,aAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAA,AAAC,GAAG,GAAG,CAAC,CAAC;KACtD;;;WAEY,uBAAC,GAAG,EAAE;AACjB,aAAO,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3C;;;WAEU,uBAAG;AACZ,aAAO,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC;KAC3C;;;WAEQ,qBAA2C;UAA1C,KAAK,gCAAG,GAAG;UAAE,MAAM,gCAAG,GAAG;UAAE,QAAQ,gCAAG,EAAE;;AAChD,aAAO,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC;KAC1E","file":"RandEngine.js","sourcesContent":["/*\n * @Author: Lim Mingjie, Kenneth\n * @Date:   2015-05-23 09:39:42\n * @Last Modified by:   Lim Mingjie, Kenneth\n * @Last Modified time: 2015-05-24 18:43:49\n */\n\n'use strict';\n\nimport seedRandom from 'seedrandom';\n\nconst defaultImgProviderUrl = '//lorempixel.com';\nconst defaultRNGSeed = 4;\n\nexport default class {\n  constructor(options = {}) {\n    this.imgProviderUrl = options.imgProviderUrl || defaultImgProviderUrl;\n    this.seed = options.seed || defaultRNGSeed;\n\n    seedRandom(this.seed, {\n      global: true\n    });\n  }\n\n  randFullNumber(digits = 3) {\n    let result = \"\";\n\n    for (let i = 0; i < digits; i++) {\n      result += Math.floor(Math.random() * 9);\n    }\n\n    return result;\n  }\n\n  randRange(min = 0, max  = 1) {\n    // Swap the inputs if max is smaller than min\n    if (max < min) {\n      let temp = max;\n      max = min;\n      min = temp;\n    }\n\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  randFromArray(arr) {\n    return arr[this.randRange(0, arr.length)];\n  }\n\n  randBoolean() {\n    return Math.random() > 0.5 ? true : false;\n  }\n\n  randImage(width = 500, height = 500, category = '') {\n    return this.imgProviderUrl + '/' + width + '/' + height + '/' + category;\n  }\n}"],"sourceRoot":"/source/"}