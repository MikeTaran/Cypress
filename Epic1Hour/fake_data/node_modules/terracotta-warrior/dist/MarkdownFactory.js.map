{"version":3,"sources":["MarkdownFactory.js"],"names":[],"mappings":"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","file":"MarkdownFactory.js","sourcesContent":["/*\n * @Author: Lim Mingjie, Kenneth\n * @Date:   2015-05-23 20:58:28\n * @Last Modified by:   Lim Mingjie, Kenneth\n * @Last Modified time: 2015-05-26 16:22:50\n */\n\n'use strict';\n\nimport RandEngine from './RandEngine';\nimport TextFactory from './TextFactory';\nimport EquationFactory from '.EquationFactory';\n\nconst defaultItemSyntax = '- ';\nconst defaultEnumSyntax = '* ';\nconst defaultQuoteSyntax = '> ';\n\nexport default class {\n  constructor(options = {}) {\n    this.engine = options.engine || new RandEngine();\n    this.tf = new TextFactory({ engine: this.engine });\n    this.ef = new EquationFactory({ engine: this.engine });\n\n    this.itemSyntax = options.itemSyntax || defaultItemSyntax;\n    this.enumSyntax = options.enumSyntax || defaultEnumSyntax;\n    this.quoteSyntax = options.quoteSyntax || defaultQuoteSyntax;\n  }\n\n  randImageMarkup(width = 500, height = 500) {\n    let altText = \"![\" + this.tf.randTitle() + \"]\";\n    let markupImage = \"(\" + this.engine.randImage(width, height) + \")\";\n\n    return altText + markupImage;\n  }\n\n  randItemList(size = this.engine.randRange(3, 5)) {\n    let result = '';\n\n    for (let i = 0; i < size; i++) {\n      if (i === size - 1) {\n        result += this.itemSyntax + this.tf.randSentence();\n      } else {\n        result += this.itemSyntax + this.tf.randSentence() + \"\\n\";\n      }\n    }\n\n    return result;\n  }\n\n  randEnumList(size = this.engine.randRange(3, 5)) {\n    let result = '';\n\n    for (let i = 0; i < size; i++) {\n      // Always start the list with \"*.\" because Markdown\n      // ignores the actual characters used for each item\n      if (i === size - 1) {\n        result += this.enumSyntax + this.tf.randSentence();\n      } else {\n        result += this.enumSyntax + this.tf.randSentence() + \"\\n\";\n      }\n    }\n\n    return result;\n  }\n\n  randQuote() {\n    return this.quoteSyntax + this.tf.randSentence();\n  }\n\n  randContent(size = this.engine.randRange(3, 7), noConsecutive = false) {\n    let result = this.tf.randParagraph();\n    let prevRoll = -1;\n\n    for (let i = 1; i < size; i++) {\n      let diceRoll = this.engine.randRange(0, 5);\n\n      if (noConsecutive) {\n        while (diceRoll === prevRoll) {\n          diceRoll = this.engine.randRange(0, 5);\n        }\n      }\n\n      prevRoll = diceRoll;\n\n      switch (diceRoll) {\n      case 0:\n        result += \"\\n\\n\" + this.randEnumList();\n        break;\n      case 1:\n        result += \"\\n\\n\" + this.randItemList();\n        break;\n      case 2:\n        result += \"\\n\\n\" + ef.wrapMath(ef.randEquation());\n        break;\n      case 3:\n        result += \"\\n\\n\" + this.randQuote();\n        break;\n      case 4:\n        result += \"\\n\\n\" + this.randImageMarkup();\n        break;\n      case 5:\n      default:\n        result += \"\\n\\n\" + this.randParagraph();\n        break;\n      }\n    }\n\n    return result;\n  }\n}"],"sourceRoot":"/source/"}